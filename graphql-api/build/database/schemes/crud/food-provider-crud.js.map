{"version":3,"sources":["../../../../src/database/schemes/crud/food-provider-crud.js"],"names":["Crud","create","input","FoodProviderSchema","then","provider","catch","error","update","id","where","rowsUpdate","updatedProvider","console","log"],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAMA,IAAN,CAAW;AACP,UAAMC,MAAN,CAAaC,KAAb,EAAoB;AAChB,eAAO,MAAMC,6BAAmBF,MAAnB,CAA0BC,KAA1B,EAAiCE,IAAjC,CAAuCC,QAAD,IAAc;AAC7D,mBAAOA,QAAP;AACH,SAFY,EAEVC,KAFU,CAEJC,SAAS;AACd,mBAAOA,KAAP;AACH,SAJY,CAAb;AAKH;AACD,UAAMC,MAAN,CAAaN,KAAb,EAAoBO,EAApB,EAAwB;AACpB,eAAO,MAAMN,6BAAmBK,MAAnB,CAA0BN,KAA1B,EAAiC;AAC1CQ,mBAAO;AACHD,oBAAIA;AADD;AADmC,SAAjC,EAIVL,IAJU,CAIL,CAACO,UAAD,EAAYC,eAAZ,KAAgC;AACpCC,oBAAQC,GAAR,CAAYF,eAAZ;AACA,mBAAOA,eAAP;AACH,SAPY,EAOVN,KAPU,CAOJC,SAAS;AACd,mBAAOA,KAAP;AACH,SATY,CAAb;AAUH;AAnBM;;kBAuBI,IAAIP,IAAJ,E","file":"food-provider-crud.js","sourcesContent":["import FoodProviderSchema from '../FoodProviderSchema'\n    \nclass Crud {\n    async create(input) {\n        return await FoodProviderSchema.create(input).then((provider) => {\n            return provider;\n        }).catch(error => {\n            return error;\n        });\n    }\n    async update(input, id) {\n        return await FoodProviderSchema.update(input, {\n            where: {\n                id: id\n            }\n        }).then((rowsUpdate,updatedProvider) => {\n            console.log(updatedProvider)\n            return updatedProvider;\n        }).catch(error => {\n            return error;\n        });\n    }\n}\n\n\nexport default new Crud();"]}