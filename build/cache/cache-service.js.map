{"version":3,"sources":["../../src/cache/cache-service.js"],"names":["CacheService","constructor","ttl","pipeline","cache","enabled","config","get","key","console","log","then","t","catch","e","error","set","value","multi","expire","exec","d","flush","flushall","remove","del"],"mappings":";;;;;;AAAA;;AAKA;;;;;;AAEA,MAAMA,YAAN,CAAmB;;AAEfC,gBAAYC,GAAZ,EAAiB;AACb,aAAKA,GAAL,GAAWA,GAAX;AACA,aAAKC,QAAL,GAAgBC,cAAMD,QAAtB;AACA,aAAKE,OAAL,GAAeC,iBAAOD,OAAtB;AACH;;AAED,UAAME,GAAN,CAAUC,GAAV,EAAe;AACX,YAAG,CAAC,KAAKH,OAAT,EAAiB;AACbI,oBAAQC,GAAR,CAAY,4BAAZ;AACA,mBAAO,IAAP;AACH;AACD,eAAO,MAAMN,cAAMG,GAAN,CAAUC,GAAV,EAAeG,IAAf,CAAoBC,KAAK;AAClC,mBAAOA,CAAP;AACH,SAFY,EAEVC,KAFU,CAEJC,KAAK;AACVL,oBAAQM,KAAR,CAAcD,CAAd;AACA,mBAAO,IAAP;AACH,SALY,CAAb;AAMA,eAAO,IAAP;AACH;;AAED,UAAME,GAAN,CAAUR,GAAV,EAAeS,KAAf,EAAsB;AAClB,YAAG,CAAC,KAAKZ,OAAT,EAAiB;AACbI,oBAAQC,GAAR,CAAY,4BAAZ;AACA,mBAAO,CAAP;AACH;;AAED,eAAO,MAAMN,cAAMc,KAAN,GACRF,GADQ,CACJR,GADI,EACCS,KADD,EAERE,MAFQ,CAEDX,GAFC,EAEI,KAAKN,GAFT,EAGRkB,IAHQ,GAIRT,IAJQ,CAIHU,KAAK;AACP,mBAAO,CAAP;AACH,SANQ,EAMNR,KANM,CAMAC,KAAK;AACVL,oBAAQM,KAAR,CAAcD,CAAd;AACA,mBAAO,CAAP;AACH,SATQ,CAAb;AAUH;;AAEDQ,YAAQ;AACJ,YAAG,CAAC,KAAKjB,OAAT,EAAiB;AACbI,oBAAQC,GAAR,CAAY,4BAAZ;AACA,mBAAO,CAAP;AACH;AACDN,sBAAMmB,QAAN;AACH;;AAED,UAAMC,MAAN,CAAahB,GAAb,EAAkB;AACd,YAAG,CAAC,KAAKH,OAAT,EAAiB;AACbI,oBAAQC,GAAR,CAAY,4BAAZ;AACA,mBAAO,CAAP;AACH;;AAED,cAAMN,cAAMqB,GAAN,CAAUjB,GAAV,EAAeG,IAAf,CAAoBU,KAAK;AAC3B,mBAAO,CAAP;AACH,SAFK,EAEHR,KAFG,CAEGC,KAAK;AACVL,oBAAQM,KAAR,CAAcD,CAAd;AACA,mBAAO,CAAP;AACH,SALK,CAAN;AAMH;AA5Dc;;kBA+DJ,IAAId,YAAJ,CAAiBE,UAAjB,C","file":"cache-service.js","sourcesContent":["import {\n    ttl,\n    client as cache\n} from '../database/redis'\n\nimport config from './config'\n\nclass CacheService {\n\n    constructor(ttl) {\n        this.ttl = ttl;\n        this.pipeline = cache.pipeline;\n        this.enabled = config.enabled;\n    }\n\n    async get(key) {\n        if(!this.enabled){\n            console.log('Cache service is disabled.')            \n            return null;\n        }\n        return await cache.get(key).then(t => {\n            return t;\n        }).catch(e => {\n            console.error(e);\n            return null;\n        });\n        return null;\n    }\n\n    async set(key, value) {\n        if(!this.enabled){\n            console.log('Cache service is disabled.')\n            return 0;\n        }\n\n        return await cache.multi()\n            .set(key, value)\n            .expire(key, this.ttl)\n            .exec()\n            .then(d => {\n                return 1;\n            }).catch(e => {\n                console.error(e);\n                return 0;\n            });\n    }\n\n    flush() {\n        if(!this.enabled){\n            console.log('Cache service is disabled.')\n            return 0;\n        }\n        cache.flushall();\n    }\n\n    async remove(key) {\n        if(!this.enabled){\n            console.log('Cache service is disabled.')\n            return 0;\n        }\n\n        await cache.del(key).then(d => {\n            return 1;\n        }).catch(e => {\n            console.error(e);\n            return 0;\n        })\n    }\n}\n\nexport default new CacheService(ttl);"]}