{"version":3,"sources":["../../src/oauth/router.js"],"names":["router","express","Router","use","googleRouter","get","req","res","user","name","displayName","email","imagePath","oauthProvider","saveUser","then","result","data","createUser","id","redirect","catch","error","Promise","resolve","reject","query","fs","readFileSync","path","join","__dirname","queryString","querystring","stringify","variables","JSON","axios","post","appConfig","gqlRoute","response","status","message","stackTrace"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,SAAX,EAAsBC,sBAAtB;;AAEAJ,OAAOK,GAAP,CAAW,UAAX,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAIC,OAAO;AACPC,cAAMH,IAAIE,IAAJ,CAASE,WADR;AAEPC,eAAOL,IAAIE,IAAJ,CAASG,KAFT;AAGPC,mBAAWN,IAAIE,IAAJ,CAASI,SAHb;AAIPC,uBAAeP,IAAIE,IAAJ,CAASK;AAJjB,KAAX;AAMAC,aAASN,IAAT,EAAeO,IAAf,CAAoBC,UAAU;AAC1BV,YAAIE,IAAJ,CAAS,IAAT,IAAiBQ,OAAOC,IAAP,CAAYC,UAAZ,CAAuBC,EAAxC;AACA,eAAOZ,IAAIa,QAAJ,CAAa,YAAb,CAAP;AACH,KAHD,EAGGC,KAHH,CAGSC,SAAS;AACd,eAAOf,IAAIa,QAAJ,CAAa,QAAb,CAAP;AACH,KALD;AAMH,CAbD;;AAgBA,IAAIN,WAAW,UAAUN,IAAV,EAAgB;AAC3B,WAAO,IAAIe,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,cAAMC,QAAQC,aAAGC,YAAH,CAAgBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,yCAArB,CAAhB,EAAiF,MAAjF,CAAd;AACA,YAAIC,cAAcC,sBAAYC,SAAZ,CAAsB;AACpCR,mBAAOA,KAD6B;AAEpCS,uBAAWC,KAAKF,SAAL,CAAe1B,IAAf;AAFyB,SAAtB,CAAlB;AAIA6B,wBAAMC,IAAN,CAAWC,iBAAUC,QAArB,EAA+B;AACvBd,mBAAOA,KADgB;AAEvBS,uBAAWC,KAAKF,SAAL,CAAe1B,IAAf;AAFY,SAA/B,EAIKO,IAJL,CAIU,UAAU0B,QAAV,EAAoB;AACtBjB,oBAAQiB,SAASxB,IAAjB;AACH,SANL,EAOKI,KAPL,CAOW,UAAUC,KAAV,EAAiB;AACpB,mBAAOG,OAAO;AACViB,wBAAQ,GADE;AAEVC,yBAAS,wBAFC;AAGVC,4BAAYtB;AAHF,aAAP,CAAP;AAKH,SAbL;AAcH,KApBM,CAAP;AAqBH,CAtBD;kBAuBetB,M","file":"router.js","sourcesContent":["import express from 'express'\n\nimport googleRouter from \"./google-router\";\nimport axios from 'axios';\nimport querystring from \"querystring\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport appConfig from '../config'\nimport https from \"https\";\n\nconst router = express.Router();\n\nrouter.use('/google', googleRouter);\n\nrouter.get('/success', (req, res) => {\n    let user = {\n        name: req.user.displayName,\n        email: req.user.email,\n        imagePath: req.user.imagePath,\n        oauthProvider: req.user.oauthProvider\n    }\n    saveUser(user).then(result => {\n        req.user['id'] = result.data.createUser.id;\n        return res.redirect('/dashboard');\n    }).catch(error => {\n        return res.redirect('/error');\n    });\n});\n\n\nlet saveUser = function (user) {\n    return new Promise((resolve, reject) => {\n        const query = fs.readFileSync(path.join(__dirname, \"/../graphql-queries/create-user.graphql\"), \"utf8\");\n        let queryString = querystring.stringify({\n            query: query,\n            variables: JSON.stringify(user)\n        })\n        axios.post(appConfig.gqlRoute, {\n                query: query,\n                variables: JSON.stringify(user)\n            })\n            .then(function (response) {\n                resolve(response.data);\n            })\n            .catch(function (error) {\n                return reject({\n                    status: 500,\n                    message: 'Internal server error.',\n                    stackTrace: error\n                });\n            });\n    });\n}\nexport default router\n"]}