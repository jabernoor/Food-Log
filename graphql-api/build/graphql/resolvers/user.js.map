{"version":3,"sources":["../../../src/graphql/resolvers/user.js"],"names":["User","constructor","id","source","schema","name","email","imagePath","oauthProvider","createdAt","updatedAt"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA,MAAMA,IAAN,CAAW;;AAEPC,gBAAYC,EAAZ,EAAe;AACX,eAAO,CAAC,YAAY;AAChB,iBAAKA,EAAL,GAAUA,EAAV;AACA,iBAAKC,MAAL,GAAc,MAAM,oBAASC,oBAAT,EAAgBF,EAAhB,CAApB;AACA,mBAAO,IAAP,CAHgB,CAGH;AAChB,SAJM,GAAP;AAKH;;AAEDA,SAAI;;AAEA,eAAO,KAAKC,MAAL,CAAYD,EAAnB;AACH;;AAEDG,WAAM;AACF,eAAO,KAAKF,MAAL,CAAYE,IAAnB;AACH;;AAEDC,YAAO;AACH,eAAO,KAAKH,MAAL,CAAYG,KAAnB;AACH;;AAEDC,gBAAW;AACP,eAAO,KAAKJ,MAAL,CAAYI,SAAnB;AACH;;AAEDC,oBAAe;AACX,eAAO,KAAKL,MAAL,CAAYK,aAAnB;AACH;;AAEDC,gBAAW;AACP,eAAO,KAAKN,MAAL,CAAYM,SAAnB;AACH;;AAEDC,gBAAW;AACP,eAAO,KAAKP,MAAL,CAAYO,SAAnB;AACH;;AArCM;kBAwCIV,I","file":"user.js","sourcesContent":["import schema from '../../database/schemes/UserSchema';\nimport {findByPK} from '../../database/schemes/crud/crud';\nclass User {\n\n    constructor(id){\n        return (async () => {\n            this.id = id;\n            this.source = await findByPK(schema,id);\n            return this; // when done\n        })();\n    }\n    \n    id(){\n        \n        return this.source.id;\n    }\n    \n    name(){\n        return this.source.name;\n    }\n    \n    email(){\n        return this.source.email;        \n    }\n\n    imagePath(){\n        return this.source.imagePath;\n    }\n\n    oauthProvider(){\n        return this.source.oauthProvider;\n    }\n\n    createdAt(){\n        return this.source.createdAt;\n    }\n\n    updatedAt(){\n        return this.source.updatedAt;\n    }\n\n}\nexport default User"]}